#compdef tgrep

autoload -U is-at-least

_tgrep() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*-e+[the regex expression]::_default' \
'*--regexp=[the regex expression]::_default' \
'-p+[the path to search, if not provided, search the current directory]::_files' \
'--path=[the path to search, if not provided, search the current directory]::_files' \
'*--glob=[rules match .gitignore globs, but ! has inverted meaning, overrides other ignore logic]::_default' \
'--searcher=[executable to do the searching]::(rg tgrep)' \
'--char-style=[style of characters to use]::(ascii single double heavy rounded none)' \
'--editor=[command used to open selections]::_default' \
'--open-like=[command line syntax for opening a file at a line]::(vi hx code jed default)' \
'--completions=[generate completions for given shell]:shell:(bash elvish fish powershell zsh)' \
'--selection-file=[file to write selection to (first line\: file path, second line\: line number if applicable)]::_files' \
'--repeat-file=[file where arguments are saved]::_files' \
'--threads=[set the appropriate number of threads to use]::_default' \
'--max-depth=[the max depth to search]::_default' \
'--prefix-len=[number of characters to show before a match]::_default' \
'--max-length=[set the max length for a matched line]::_default' \
'--long-branch-each=[number of files to print on each branch]::_default' \
'--long-branch[multiple files from the same directory are shown on the same branch]' \
'--plugin-support[]' \
'-.[search hidden files]' \
'--hidden[search hidden files]' \
'--repeat[repeats the last saved search]' \
'-n[show line number of match]' \
'--line-number[show line number of match]' \
'-f[if a pattern is given hide matched content, otherwise show the files that would be searched]' \
'--files[if a pattern is given hide matched content, otherwise show the files that would be searched]' \
'--links[search linked paths]' \
'--no-ignore[don'\''t use ignore files]' \
'-c[display number of files matched in directory and number of lines matched in a file]' \
'--count[display number of files matched in directory and number of lines matched in a file]' \
'--no-color[don'\''t use colors]' \
'--no-bold[don'\''t bold anything]' \
'--overview[conclude results with an overview]' \
'-s[results are shown in a selection interface for opening]' \
'--select[results are shown in a selection interface for opening]' \
'--menu[provide arguments and select result through an interface]' \
'--trim[trim whitespace at the beginning of lines]' \
'--pcre2[enable PCRE2]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
'::positional regexp -- the regex expression:_default' \
'::positional target -- the path to search, if not provided, search the current directory:_files' \
&& ret=0
}

(( $+functions[_tgrep_commands] )) ||
_tgrep_commands() {
    local commands; commands=()
    _describe -t commands 'tgrep commands' commands "$@"
}

if [ "$funcstack[1]" = "_tgrep" ]; then
    _tgrep "$@"
else
    compdef _tgrep tgrep
fi
